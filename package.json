{
	"name": "vscode-typescript-generator",
	"displayName": "Auto TS Generator",
	"description": "Simplifies TypeScript development by providing customizable templates for generating TypeScript classes, interfaces, enums, types, functions, and variables directly from VS Code",
	"version": "1.5.0",
	"icon": "icon.png",
	"galleryBanner": {
		"color": "#0091FF",
		"theme": "dark"
	},
	"pricing": "Free",
	"license": "MIT",
	"publisher": "imgildev",
	"author": "ManuelGil",
	"sponsor": {
		"url": "https://github.com/sponsors/ManuelGil"
	},
	"engines": {
		"vscode": "^1.88.0"
	},
	"categories": [
		"Programming Languages",
		"Linters",
		"Other"
	],
	"keywords": [
		"angular",
		"auto-ts-generator",
		"auto-ts",
		"auto",
		"automation",
		"boilerplate",
		"code generator",
		"code",
		"codegen",
		"codegenerator",
		"coding",
		"command",
		"component",
		"create",
		"custom structure",
		"custom",
		"dev",
		"development tools",
		"development",
		"express.js",
		"express",
		"expressjs",
		"extension",
		"fastify",
		"file structure",
		"file templates",
		"file-generator",
		"file",
		"files",
		"folder",
		"framework",
		"frontend",
		"generate",
		"generator",
		"html",
		"javascript",
		"js",
		"json",
		"jsx",
		"language",
		"layout",
		"next.js",
		"next",
		"nextjs",
		"node.js",
		"node",
		"nodejs",
		"page",
		"pages",
		"project scaffolding",
		"react.js",
		"react",
		"reactjs",
		"template",
		"tool",
		"tools",
		"ts",
		"tsx",
		"typescript",
		"vscode extension",
		"vscode",
		"web apps",
		"web development"
	],
	"homepage": "https://github.com/ManuelGil/vscode-typescript-generator",
	"repository": {
		"type": "git",
		"url": "https://github.com/ManuelGil/vscode-typescript-generator"
	},
	"bugs": {
		"url": "https://github.com/ManuelGil/vscode-typescript-generator/issues"
	},
	"activationEvents": [
		"onLanguage:typescript",
		"onLanguage:typescriptreact"
	],
	"main": "./out/extension.js",
	"l10n": "./l10n",
	"contributes": {
		"configuration": {
			"title": "Auto TS Generator Configuration",
			"properties": {
				"autoTS.enable": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%autoTS.enable%"
				},
				"autoTS.files.defaultLanguage": {
					"type": "string",
					"default": "TypeScript",
					"enum": [
						"TypeScript",
						"JavaScript"
					],
					"scope": "resource",
					"description": "%autoTS.files.defaultLanguage%"
				},
				"autoTS.files.fileExtension": {
					"type": "string",
					"default": "ts",
					"enum": [
						"ts",
						"tsx",
						"js",
						"jsx"
					],
					"enumDescriptions": [
						"TypeScript",
						"TypeScript React",
						"JavaScript",
						"JavaScript React"
					],
					"scope": "resource",
					"description": "%autoTS.files.fileExtension%"
				},
				"autoTS.files.skipFolderConfirmation": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoTS.files.skipFolderConfirmation%"
				},
				"autoTS.files.includeTypeInFileName": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoTS.files.includeTypeInFileName%"
				},
				"autoTS.files.skipTypeSelection": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%autoTS.files.skipTypeSelection%"
				},
				"autoTS.files.autoImport": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoTS.files.autoImport%"
				},
				"autoTS.files.defaultBarrelFileName": {
					"type": "string",
					"default": "index",
					"scope": "resource",
					"description": "%autoTS.files.defaultBarrelFileName%"
				},
				"autoTS.formatting.useSingleQuotes": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%autoTS.formatting.useSingleQuotes%"
				},
				"autoTS.formatting.excludeSemiColonAtEndOfLine": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoTS.formatting.excludeSemiColonAtEndOfLine%"
				},
				"autoTS.formatting.keepExtensionOnExport": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoTS.formatting.keepExtensionOnExport%"
				},
				"autoTS.formatting.endOfLine": {
					"type": "string",
					"default": "lf",
					"enum": [
						"crlf",
						"lf"
					],
					"enumDescriptions": [
						"Windows (CRLF)",
						"Unix (LF)"
					],
					"scope": "resource",
					"description": "%autoTS.formatting.endOfLine%"
				},
				"autoTS.formatting.useStrict": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%autoTS.formatting.useStrict%"
				},
				"autoTS.formatting.headerCommentTemplate": {
					"type": "array",
					"default": [],
					"scope": "resource",
					"description": "%autoTS.formatting.headerCommentTemplate%"
				},
				"autoTS.formatting.insertFinalNewline": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%autoTS.formatting.insertFinalNewline%"
				},
				"autoTS.project.author": {
					"type": "string",
					"default": "",
					"scope": "resource",
					"description": "%autoTS.project.author%"
				},
				"autoTS.project.owner": {
					"type": "string",
					"default": "",
					"scope": "resource",
					"description": "%autoTS.project.owner%"
				},
				"autoTS.project.maintainers": {
					"type": "string",
					"default": "",
					"scope": "resource",
					"description": "%autoTS.project.maintainers%"
				},
				"autoTS.project.license": {
					"type": "string",
					"default": "MIT",
					"scope": "resource",
					"description": "%autoTS.project.license%"
				},
				"autoTS.project.version": {
					"type": "string",
					"default": "1.0.0",
					"scope": "resource",
					"description": "%autoTS.project.version%"
				},
				"autoTS.templates.customComponents": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "Name of the template"
							},
							"description": {
								"type": "string",
								"description": "Description of the template"
							},
							"type": {
								"type": "string",
								"description": "The template type"
							},
							"template": {
								"type": "array",
								"description": "The template content"
							}
						}
					},
					"default": [],
					"scope": "resource",
					"description": "%autoTS.templates.customComponents%"
				}
			}
		},
		"commands": [
			{
				"command": "autoTS.generateClass",
				"title": "%autoTS.generateClass%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateInterface",
				"title": "%autoTS.generateInterface%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateEnum",
				"title": "%autoTS.generateEnum%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateType",
				"title": "%autoTS.generateType%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateFunction",
				"title": "%autoTS.generateFunction%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateVariable",
				"title": "%autoTS.generateVariable%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateCustomComponent",
				"title": "%autoTS.generateCustomComponent%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateNodeModule",
				"title": "%autoTS.generateNodeModule%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateNodeServer",
				"title": "%autoTS.generateNodeServer%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateExpressController",
				"title": "%autoTS.generateExpressController%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateExpressMiddleware",
				"title": "%autoTS.generateExpressMiddleware%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateExpressRoute",
				"title": "%autoTS.generateExpressRoute%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateExpressServer",
				"title": "%autoTS.generateExpressServer%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateFastifyController",
				"title": "%autoTS.generateFastifyController%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateFastifyMiddleware",
				"title": "%autoTS.generateFastifyMiddleware%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateFastifyRoute",
				"title": "%autoTS.generateFastifyRoute%",
				"category": "Auto TS Generator"
			},
			{
				"command": "autoTS.generateFastifyServer",
				"title": "%autoTS.generateFastifyServer%",
				"category": "Auto TS Generator"
			}
		],
		"submenus": [
			{
				"id": "autoTS.folder.submenu",
				"label": "Auto TS Generator"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"submenu": "autoTS.folder.submenu",
					"group": "2_workspace",
					"when": "explorerViewletFocus && explorerResourceIsFolder && !explorerResourceIsRoot"
				}
			],
			"autoTS.folder.submenu": [
				{
					"command": "autoTS.generateClass",
					"group": "1_generics@1"
				},
				{
					"command": "autoTS.generateInterface",
					"group": "1_generics@2"
				},
				{
					"command": "autoTS.generateEnum",
					"group": "1_generics@3"
				},
				{
					"command": "autoTS.generateType",
					"group": "1_generics@4"
				},
				{
					"command": "autoTS.generateFunction",
					"group": "1_generics@5"
				},
				{
					"command": "autoTS.generateVariable",
					"group": "1_generics@6"
				},
				{
					"command": "autoTS.generateCustomComponent",
					"group": "2_custom@1"
				},
				{
					"command": "autoTS.generateNodeModule",
					"group": "3_node@1"
				},
				{
					"command": "autoTS.generateNodeServer",
					"group": "3_node@2"
				},
				{
					"command": "autoTS.generateExpressController",
					"group": "4_express@1"
				},
				{
					"command": "autoTS.generateExpressMiddleware",
					"group": "4_express@2"
				},
				{
					"command": "autoTS.generateExpressRoute",
					"group": "4_express@3"
				},
				{
					"command": "autoTS.generateExpressServer",
					"group": "4_express@4"
				},
				{
					"command": "autoTS.generateFastifyController",
					"group": "5_fastify@1"
				},
				{
					"command": "autoTS.generateFastifyMiddleware",
					"group": "5_fastify@2"
				},
				{
					"command": "autoTS.generateFastifyRoute",
					"group": "5_fastify@3"
				},
				{
					"command": "autoTS.generateFastifyServer",
					"group": "5_fastify@4"
				}
			]
		},
		"jsonValidation": [
			{
				"fileMatch": ".vscode/settings.json",
				"url": "./schemas/config.schema.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "rimraf out && tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"format": "biome format --write src",
		"lint": "biome lint --write src",
		"lint:check": "biome check --write src",
		"test": "vscode-test",
		"compodoc": "npx compodoc -p tsconfig.doc.json -d compodoc --theme readthedocs -s",
		"prepare": "husky"
	},
	"devDependencies": {
		"@biomejs/biome": "1.9.4",
		"@commitlint/cli": "^19.6.1",
		"@commitlint/config-conventional": "^19.6.0",
		"@compodoc/compodoc": "^1.1.26",
		"@types/mocha": "^10.0.10",
		"@types/mustache": "^4.2.5",
		"@types/node": "^22.9.0",
		"@types/vscode": "^1.88.0",
		"@vscode/l10n-dev": "^0.0.35",
		"@vscode/test-cli": "^0.0.10",
		"@vscode/test-electron": "^2.4.1",
		"glob": "^11.0.0",
		"husky": "^9.1.7",
		"lint-staged": "^15.2.11",
		"rimraf": "^6.0.1",
		"typescript": "^5.7.2"
	},
	"dependencies": {
		"mustache": "^4.2.0"
	}
}
